/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.2.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    id 'eclipse'
    id "io.freefair.lombok" version "5.0.0"
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    
}

group = 'com.vroom'
version = '1.0.0-SNAPSHOT'

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

ext {
  vertxVersion = '3.9.0'
  junitJupiterEngineVersion = '5.4.0'
}

application {
  mainClassName = 'io.vertx.core.Launcher'
}

sourceCompatibility = '1.8'

def mainVerticleName = 'com.vroom.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'


dependencies {

	implementation "io.vertx:vertx-core:$vertxVersion"
	implementation "io.vertx:vertx-web:$vertxVersion"
	
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
	testCompile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.1'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.1'
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.1'

    testImplementation "io.vertx:vertx-junit5:$vertxVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
}

shadowJar {
  classifier = 'fat'
  manifest {
    attributes 'Main-Verticle': mainVerticleName
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
    testLogging {
    events 'PASSED', 'FAILED', 'SKIPPED'
  }
}

run {
  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}

